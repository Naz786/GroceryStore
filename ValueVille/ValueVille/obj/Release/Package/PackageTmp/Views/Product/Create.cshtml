@model ValueVille.Models.ProductViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create Product</h2>


@using (Html.BeginForm("Create", "Product", new { }, FormMethod.Post, new
{
    enctype = "multipart/form-data"
}))
{
    @Html.AntiForgeryToken()

    <div class="panel panel-default">
        <div class="panel-heading">Product</div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.CategoryId)

        <div class="panel-body form-group">

            <div class="panel-body">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="panel-body">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Image, new { type = "file", required = "required", htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="panel-body">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="panel-body">
                @Html.LabelFor(model => model.ShowOnIndex, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShowOnIndex, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShowOnIndex, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="panel-body form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@Html.ActionLink("Back to List", "Index", new { id = Model.CategoryId}, new { @class="btn btn-info"})


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
