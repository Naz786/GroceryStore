@model ProductViewModel
@using ValueVille.Models

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Product</h2>


@using (Html.BeginForm("Edit", "Product", new { id = Model.Id }, FormMethod.Post, new
{
    enctype = "multipart/form-data"
}))
{
    @Html.AntiForgeryToken()
    
        <div class="panel panel-default">
            <div class="panel-heading">Product</div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.CategoryId)


            <div class="panel-body form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Image, new { type = "file", htmlAttributes = new { @class = "form-control" } })
                    @Html.Image(Model.ByteImage, "Product_Image", "100")
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
           
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>

                    @Html.LabelFor(model => model.ShowOnIndex, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ShowOnIndex, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShowOnIndex, "", new { @class = "text-danger" })
                    </div>

            <div class="panel-body form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
            </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = Model.GenerateSlug(Model.CategoryId, Model.CategoryName) }, new { @class = "btn btn-info" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
